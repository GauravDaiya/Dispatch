import{a as m}from"./chunk-KMRUGYJM.js";import{a as f}from"./chunk-UCASUQWF.js";import{I as h,S as y,a,b as v,da as o,ga as p,la as c,qa as l,s as u}from"./chunk-UI7FGHJG.js";var d=class D{constructor(i){this.http=i}getAllDrivers(){return this.http.get("http://localhost:3000/drivers")}createDriver(i){return this.http.post("http://localhost:3000/drivers",i)}getDriverById(i){return this.http.get(`http://localhost:3000/drivers/${i}`)}updateDriverStatus(i,r){return console.log(i,r),this.http.patch(`http://localhost:3000/drivers/${i}`,{status:r})}editDriverData(i,r){return this.http.put(`http://localhost:3000/drivers/${i}`,r)}DeleteDriverData(i){return this.http.delete(`http://localhost:3000/drivers/${i}`)}static \u0275fac=function(r){return new(r||D)(l(f))};static \u0275prov=c({token:D,factory:D.\u0275fac,providedIn:"root"})};var b=class D extends m{constructor(r){super({DriversData:[],DriverReadById:{}});this._DriverService=r}Drivers$=this.select(r=>r.DriversData);DriverDataById$=this.select(r=>r.DriverReadById);loadDriversData=this.updater((r,e)=>v(a({},r),{DriversData:e}));DriverDataById=this.updater((r,e)=>v(a({},r),{DriverReadById:e}));createDriver=this.updater((r,e)=>v(a({},r),{DriversData:[...r.DriversData,e]}));updateDriver=this.updater((r,{updId:e,updDriverData:t})=>{let n=r.DriversData.map(s=>s.id===e?a(a({},s),t):s);return v(a({},r),{DriversData:n})});updateDriverStatus=this.updater((r,{updId:e,updStatus:t})=>{let n=r.DriversData.map(s=>s.id===e?v(a({},s),{status:t}):s);return v(a({},r),{DriversData:n})});deleteDriver=this.updater((r,e)=>{let t=r.DriversData.filter((n,s)=>n.id!=e);return v(a({},r),{DriversData:t})});loadAllDrivers=this.effect(r=>r.pipe(y(()=>this._DriverService.getAllDrivers().pipe(p(e=>{console.log("2"),console.log("Data received from API:",e),this.loadDriversData(e)}),h(e=>(console.error("Error fetching Driver:",e),u([])))))));addSingleDriverData=this.effect(r=>r.pipe(o(e=>this._DriverService.createDriver(e).pipe(p(t=>{this.createDriver(t)})))));getDriverDataById=this.effect(r=>r.pipe(o(e=>this._DriverService.getDriverById(e).pipe(p(t=>{t&&this.DriverDataById(t)})))));updateSingleDriverData=this.effect(r=>r.pipe(o(({updId:e,updDriverData:t})=>this._DriverService.editDriverData(e,t).pipe(p(n=>{n&&this.updateDriver({updId:e,updDriverData:t})})))));updateSingleDriverStatus=this.effect(r=>r.pipe(o(({updId:e,updStatus:t})=>this._DriverService.updateDriverStatus(e,t).pipe(p(n=>{n&&this.updateDriverStatus({updId:e,updStatus:t})})))));deleteSingleDriverData=this.effect(r=>r.pipe(o(e=>this._DriverService.DeleteDriverData(e).pipe(p(t=>{t&&this.deleteDriver(e)})))));static \u0275fac=function(e){return new(e||D)(l(d))};static \u0275prov=c({token:D,factory:D.\u0275fac})};export{b as a};
