import{a as v}from"./chunk-NF3GGHQY.js";import{a as u}from"./chunk-UCASUQWF.js";import{I as h,S as y,a as l,b as n,da as o,ga as i,la as d,qa as F,s as g}from"./chunk-UI7FGHJG.js";var f=class s{constructor(r){this.http=r}getAllfleetManagers(){return this.http.get("https://json-server-app-u17t.onrender.com/fleetManagers")}getSinglefleetManager(r){return this.http.get(`https://json-server-app-u17t.onrender.com/fleetManagers?name=${r}`)}createFleetMamager(r){return this.http.post("https://json-server-app-u17t.onrender.com/fleetManagers",r)}createFleet(r){return this.http.post("https://json-server-app-u17t.onrender.com/fleets",r)}getAllFleets(){return this.http.get("https://json-server-app-u17t.onrender.com/fleets")}getSingleFleetData(r){return this.http.get(`https://json-server-app-u17t.onrender.com/fleets/${r}`)}EditFleetData(r,e){return this.http.put(`https://json-server-app-u17t.onrender.com/fleets/${r}`,e)}DeleteFleetData(r){return this.http.delete(`https://json-server-app-u17t.onrender.com/fleets/${r}`)}static \u0275fac=function(e){return new(e||s)(F(u))};static \u0275prov=d({token:s,factory:s.\u0275fac,providedIn:"root"})};var m=class s extends v{constructor(e){super({FleetData:[],fleetManagers:[],singleFleetManager:{},fleetReadById:{}});this._FleetService=e}FleetData$=this.select(e=>e.FleetData);FleetDataById$=this.select(e=>e.fleetReadById);FleetManagers$=this.select(e=>e.fleetManagers);SingleFleetManager$=this.select(e=>e.singleFleetManager);loadFleetData=this.updater((e,t)=>n(l({},e),{FleetData:t}));loadFleetManagers=this.updater((e,t)=>n(l({},e),{fleetManagers:t}));fleedDataById=this.updater((e,t)=>n(l({},e),{fleetReadById:t}));singleFleetManager=this.updater((e,t)=>n(l({},e),{singleFleetManager:t}));createFleet=this.updater((e,t)=>n(l({},e),{FleetData:[...e.FleetData,t]}));createFleetManager=this.updater((e,t)=>n(l({},e),{fleetManagers:[...e.fleetManagers,t]}));deleteFleet=this.updater((e,t)=>{let a=e.FleetData.filter((p,c)=>p.id!=t);return n(l({},e),{FleetData:a})});updateFleet=this.updater((e,{updId:t,updFleetData:a})=>{let p=e.FleetData.map(c=>c.id===t?l(l({},c),a):c);return n(l({},e),{FleetData:p})});loadAllFleets=this.effect(e=>e.pipe(y(()=>this._FleetService.getAllFleets().pipe(i(t=>{console.log("2"),console.log("Data received from API:",t),this.loadFleetData(t)}),h(t=>(console.error("Error fetching Fleets:",t),g([])))))));loadAllFleetManagers=this.effect(e=>e.pipe(y(()=>this._FleetService.getAllfleetManagers().pipe(i(t=>{console.log("2"),console.log("Data received from API:",t),this.loadFleetManagers(t)}),h(t=>(console.error("Error fetching Fleets:",t),g([])))))));addSingleFleetData=this.effect(e=>e.pipe(o(t=>this._FleetService.createFleet(t).pipe(i(a=>{this.createFleet(a)})))));addSingleFleetManager=this.effect(e=>e.pipe(o(t=>this._FleetService.createFleetMamager(t).pipe(i(a=>{this.createFleetManager(a)})))));deleteSingleFleetData=this.effect(e=>e.pipe(o(t=>this._FleetService.DeleteFleetData(t).pipe(i(a=>{a&&this.deleteFleet(t)})))));updateSingleFleetData=this.effect(e=>e.pipe(o(({updId:t,updFleetData:a})=>this._FleetService.EditFleetData(t,a).pipe(i(p=>{p&&this.updateFleet({updId:t,updFleetData:a})})))));getFleetDataById=this.effect(e=>e.pipe(o(t=>this._FleetService.getSingleFleetData(t).pipe(i(a=>{a&&this.fleedDataById(a)})))));getSingleFleetManager=this.effect(e=>e.pipe(o(t=>this._FleetService.getSinglefleetManager(t).pipe(i(a=>{a&&this.singleFleetManager(a)})))));static \u0275fac=function(t){return new(t||s)(F(f))};static \u0275prov=d({token:s,factory:s.\u0275fac})};export{f as a,m as b};
